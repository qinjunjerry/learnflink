trigger:
- master


variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'cae00c10-93d7-4cb0-b141-9d475c70051c'

  # Agent VM image name
  vmImageName: 'windows-latest'

  # DEBUG
  system.debug: true


stages:

# - stage: Build
#   displayName: Build stage
#   jobs:
#   - job: MavenPackage
#     displayName: Maven Package
#     pool:
#       vmImage: $(vmImageName)

#     steps:
#     - task: Maven@3
#       displayName: 'Maven Package'
#       inputs:
#         mavenPomFile: 'pom.xml'

#     - task: CopyFiles@2
#       displayName: Copy job jar
#       inputs:
#         SourceFolder: 'target'
#         Contents: 'learnflink-*.jar'
#         TargetFolder: '$(build.artifactstagingdirectory)'

#     - task: PublishPipelineArtifact@1
#       inputs:
#         targetPath: '$(build.artifactstagingdirectory)'
#         artifactName: JobJar

# - stage: Deploy
#   displayName: Deploy stage
#   dependsOn: Build
#   condition: succeeded()
#   jobs:
#     - job: DownloadDeploy
#       displayName: Download and Deploy
#       pool:
#         vmImage: $(vmImageName)
#       steps:
#       - task: DownloadPipelineArtifact@2
#         displayName: 'Download Pipeline Artifacts'
#         inputs:
#           artifact: 'JobJar'
#           downloadPath: '$(build.artifactstagingdirectory)' 

#       - task: AzureFileCopy@3
#         inputs:
#           sourcePath: '$(build.artifactstagingdirectory)' 
#           azureSubscription: '$(azureSubscription)'
#           destination: azureBlob
#           storage: jqinblobstorage
#           containerName: vvp
#           BlobPrefix: 'artifacts/namespaces/default'

- stage: Run
  displayName: Run stage
  jobs:
    - job: SetupEnv
      steps:
        - task: KubectlInstaller@0
          displayName: Kubectl installer
          inputs: 
            kubectlVersion: 1.15.0

        - task: AzureKeyVault@1
          inputs:
            azureSubscription: '$(azureSubscription)'
            KeyVaultName: 'vvppipeline'
            SecretsFilter: 'pipeline-servive-principal-password'

        - script: az login --service-principal -u http://azure-cli-2019-12-06-17-03-56 -p $(pipeline-servive-principal-password)  --tenant 2925ee25-3bd0-402a-88f1-69307e6a39f3
        - script: az aks get-credentials --resource-group fe-testing --name juncluster
        - script: kubectl get pods --namespace kube-system
        - script: kubectl port-forward service/vvp-ververica-platform 8080:80 --namespace kube-system &

    - job: Run
      dependsOn: SetupEnv
      condition: succeeded()
      # this is needed: because InvokeRESTAPI@1 is a server job task (agentless job in the classic editor), not a regular task that can run on an agent.
      pool: server
      steps:
        - task: InvokeRESTAPI@1
          inputs:
            connectionType: 'connectedServiceName'
            serviceConnection: 'vvpconnection'
            method: 'PATCH'
            headers: |
              {
              "Content-Type": "application/yaml",
              "accept": "application/yaml"
              }
            body: |
              kind: Deployment
              apiVersion: v1
              spec:
                state: RUNNING
            waitForCompletion: 'false'

